{
  "benchmarks": [
    {
      "title": "Do a complex ComboAgg on 100m rows previously in memory via select",
      "generator_files": [ "relation-no-nulls-100m.json" ],
      "benchmark": {
          "statements" : [
              {
                  "title" : "preamble",
                  "text" : [
                      "import time",
                      "import deephaven.parquet as pt",
                      "from deephaven import agg",
                      "tag = 'no-nulls-100m'",
                      "bench_name = 'select-comboagg-bench-' + tag",
                  ],
                  "timed" : 0
              },

              {
                  "title" : "load tables",
                  "text" : "relation = pt.read('/data/relation-' + tag + '.parquet').select(formulas=['animal_id', 'adjective_id'])",
                  "timed" : 1
              },

              {
                  "title" : "setup metrics",
                  "file" : "before.py",
                  "timed" : 0
              },

              {
                  "title" : "perform ComboAgg",
                  "text" : [
                      "time_start_ns = time.perf_counter_ns()",
					  "aggs = [",
					  "   agg.sum_('SumAdj=adjective_id'),",
					  "   agg.min_('MinAdj=adjective_id'),", 
					  "   agg.max_('MaxAdj=adjective_id'),", 
					  "   agg.avg('AvgAdj=adjective_id'),", 
					  "   agg.std('StdAdj=adjective_id'),", 
					  "   agg.first('FirstAdj=adjective_id'),", 
					  "   agg.last('LastAdj=adjective_id'),", 
					  "   agg.count_('CountAdj')",
					  "]",
                      "result = relation.agg_by(aggs, 'animal_id')",
                      "time_end_ns = time.perf_counter_ns()",
                  ],
                  "timed" : 1
              },

              {
                  "title" : "post processing",
                  "file" : "after.py",
                  "timed" : 0
              }
          ]
      }
    }
  ]
}
