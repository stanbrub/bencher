{
  "benchmarks": [
    {
      "title": "Sort 10m relation table on 1 column incrementally",
      "generator_files": [ "relation-no-nulls-10m.json" ],
      "benchmark": {
          "statements" : [
              {
                  "title" : "check ugp",
                  "file" : "checkugp.py",
                  "timed" : 0
              },

              {
                  "title" : "preamble",
                  "text" : [
                      "import time",
                      "import deephaven.parquet as pt",
                      "tag = 'no-nulls-10m-inc'",
                      "bench_name = 'sort-bench-' + tag + '-inc'"
                  ],
                  "timed" : 0
              },

              {
                  "title" : "load tables",
                  "text" : [
                      "relation = pt.read('/data/relation-no-nulls-10m.parquet')",
                      "autotune = jpy.get_type('io.deephaven.engine.table.impl.select.AutoTuningIncrementalReleaseFilter')",
                      "relation_filter = autotune(0, 1000000, 1.0, True)",
                      "relation_filtered = relation.where(relation_filter)"
                  ],
                  "timed" : 1
              },

              {
                  "title" : "setup metrics",
                  "file" : "before.py",
                  "timed" : 0
              },

              {
                  "title" : "initialize sort",
                  "text" : [
                      "result = relation_filtered.sort('animal_id')",
                      "relation_filter.start()"
                  ],
                  "timed" : 1
              },

              {
                  "title" : "complete sort",
                  "text" : [
                      "relation_filter.waitForCompletion()",
                      "elapsed_benchmark_nanos = relation_filter.durationNanos()",
                      "processed_rows = result.size"
                  ],
                  "timed" : 1
              },

              {
                  "title" : "post processing",
                  "file" : "after.py",
                  "timed" : 0
              }
          ]
      }
    }
  ]
}
